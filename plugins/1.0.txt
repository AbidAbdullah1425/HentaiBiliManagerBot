'''from pyrogram import Client, filters
from pyrogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
import aiohttp
import base64
import os
from bot import Bot
import asyncio
from config import OWNER_ID, DB_CHANNEL_ID, POST_CHANNEL_ID, BOT_USERNAME, CREDIT

def encode(text: str) -> str:
    return base64.urlsafe_b64encode(text.encode()).decode()

async def update_progress(msg, step):
    bars = ["▱▱▱▱", "▰▱▱▱", "▰▰▱▱", "▰▰▰▱", "▰▰▰▰"]
    if step < len(bars):
        await msg.edit(f"🔄 Processing... `{bars[step]}`")
        await asyncio.sleep(3)

@Bot.on_message(filters.command("post") & filters.private & filters.user(OWNER_ID))
async def post_panel(client: Client, message: Message):
    video_path = None
    try:
        # Step 1: Get Title
        await message.reply("📌 Send the **Title** for your post:")
        title_msg = await client.listen(message.chat.id, timeout=60)
        title = title_msg.text
        await title_msg.delete()

        # Step 2: Get Video Link
        await message.reply("🎬 Now send the **Direct Video Link**:")
        video_msg = await client.listen(message.chat.id, timeout=60)
        video_url = video_msg.text
        await video_msg.delete()

        # Step 3: Get Banner Image Link
        await message.reply("🖼️ Lastly, send the **Image Link (Banner)**:")
        img_msg = await client.listen(message.chat.id, timeout=60)
        image_url = img_msg.text
        await img_msg.delete()

        progress = await message.reply("🔄 Processing... `▱▱▱▱`")
        await update_progress(progress, 1)

        # Step 4: Download video
        async with aiohttp.ClientSession() as session:
            async with session.get(video_url) as resp:
                if resp.status != 200:
                    await progress.edit("❌ Failed to download video.")
                    return
                video_data = await resp.read()

        video_path = f"video_{message.from_user.id}.mp4"
        with open(video_path, "wb") as f:
            f.write(video_data)

        await update_progress(progress, 2)

        # Step 5: Upload to DB Channel
        db_caption = f"{title}\n\n🔰 MANAGED BY @Goddo_YatoBot"
        sent_msg = await client.send_video(
            chat_id=DB_CHANNEL_ID,
            video=video_path,
            file_name=f"{title} - {CREDIT}.mp4",
            caption=db_caption
        )

        if os.path.exists(video_path):
            os.remove(video_path)

        await update_progress(progress, 3)

        # Step 6: Generate Link
        encoded = encode(f"get-{sent_msg.id * abs(DB_CHANNEL_ID)}")
        start_link = f"https://t.me/{BOT_USERNAME}?start={encoded}"

        # Step 7: Post to Public Channel (without "MANAGED BY..." part)
        buttons = InlineKeyboardMarkup([
            [InlineKeyboardButton("📥 Watch / Download", url=start_link)]
        ])
        await client.send_photo(
            chat_id=POST_CHANNEL_ID,
            photo=image_url,
            caption=title,  # Only the title
            reply_markup=buttons
        )

        await update_progress(progress, 4)
        await progress.edit("✅ Done! Posted successfully.")

    except Exception as e:
        if video_path and os.path.exists(video_path):
            os.remove(video_path)
        await message.reply(f"❌ Error: {e}")'''